pipelines:
  default:
    - step:
        image: node:14-alpine
        name: "Install build"
        caches:
          - node
        script:
          - export NODE_OPTIONS=--max_old_space_size=1024
          - npm install --quiet
        services:
          - postgres
          - docker
    - step:
        image: node:14-alpine
        name: "Test"
        size: 2x
        caches:
          - node
        script:
          - export NODE_OPTIONS=--max_old_space_size=1024
          - npm install --quiet
          - npx prisma generate
          - npm run test:cov
        artifacts: # defining the artifacts to be passed to each future step.
          - test-report.xml
          - coverage/lcov.info
        services:
          - docker
    - step:
        image: maven:3.3.9-alpine
        name: SonarQube analysis
        clone:
          depth: full
        script:
          - pipe: sonarsource/sonarqube-scan:1.1.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL} # Get the value from the repository/workspace variable.
              SONAR_TOKEN: ${SONAR_TOKEN} # Get the value from the repository/workspace variable. You shouldn't set secret in clear text here.
              SONAR_SCANNER_OPTS: -Xmx512m
              EXTRA_ARGS: "-Dsonar.projectKey=notificaciones"
definitions:
  services:
    docker:
      memory: 2048 #increasing docker service memory
    postgres:
      image: postgres:14-alpine
      memory: 1024
      environment:
        POSTGRES_DB: "notificaciones"
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "1234"
  caches:
    sonar: ~/.sonar
    bundler: vendor/bundle
